<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.site.blog.my.core.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.site.blog.my.core.entity.User">
        <id column="user_id" jdbcType="INTEGER" property="UserId" />
        <result column="login_user_name" jdbcType="VARCHAR" property="loginUserName" />
        <result column="login_password" jdbcType="VARCHAR" property="loginPassword" />
        <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
        <result column="user_features" jdbcType="VARCHAR" property="features" />
        <result column="locked" jdbcType="TINYINT" property="locked" />
        <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
        <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
        <result column="role_id" jdbcType="INTEGER" property="roleId" />
    </resultMap>
    <sql id="Base_Column_List">
    user_id, login_user_name, login_password, nick_name, user_features, locked, user_email, user_phone
    , role_id
    </sql>

    <select id="login" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_user_test
        where login_user_name = #{userName,jdbcType=VARCHAR} AND login_password=#{password,jdbcType=VARCHAR} AND locked = 0
    </select>

    <insert id="insert" parameterType="com.site.blog.my.core.entity.User">
    insert into tb_user_test (user_id, login_user_name, login_password,
      nick_name, user_features, locked,user_email,user_phone,role_id)
    values (#{UserId,jdbcType=INTEGER}, #{loginUserName,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR},
      #{nickName,jdbcType=VARCHAR}, #{features,jdbcType=VARCHAR}, #{locked,jdbcType=TINYINT},
      #{userEmail,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER})
    </insert>

    <select id="findByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_user_test
        where login_user_name = #{loginUserName,jdbcType=VARCHAR}
    </select>

    <select id="findByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_user_test
        where user_id = #{UserId,jdbcType=INTEGER}
    </select>

    <update id="update" >
    update tb_user_test
    set user_features = #{features,jdbcType=VARCHAR}
    where user_id = #{UserId,jdbcType=INTEGER}
  </update>

    <update id="updateInfo" >
    update tb_user_test
    set nick_name = #{nickName,jdbcType=VARCHAR}, user_email = #{userEmail,jdbcType=VARCHAR},
    user_phone = #{userPhone,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

    <update id="updatePassword" >
    update tb_user_test
    set login_password = #{password,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

    <update id="updateRole" >
    update tb_user_test
    set role_id = #{roleId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

    <update id="updateRoleByIds">
        update tb_user_test
        set role_id = 1 where user_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>